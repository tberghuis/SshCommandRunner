Exception java.lang.IllegalStateException: Reading a state that was created after the snapshot was taken or in a snapshot that has not yet been applied
  at androidx.compose.runtime.snapshots.SnapshotKt.readError (Snapshot.kt:1925)
  at androidx.compose.runtime.snapshots.SnapshotKt.readable (Snapshot.kt:1909)
  at androidx.compose.runtime.SnapshotMutableStateImpl.getValue (SnapshotState.kt:135)
  at dev.tberghuis.sshcommandrunner.ui.RunCommandViewModel.getCommand (RunCommandViewModel.kt:97)
  at dev.tberghuis.sshcommandrunner.ui.RunCommandViewModel.runCommand (RunCommandViewModel.kt:54)
  at dev.tberghuis.sshcommandrunner.ui.RunCommandViewModel.access$runCommand (RunCommandViewModel.kt:26)
  at dev.tberghuis.sshcommandrunner.ui.RunCommandViewModel$1$1.invokeSuspend (RunCommandViewModel.kt:48)
  at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith (ContinuationImpl.kt:33)
  at kotlinx.coroutines.DispatchedTask.run (DispatchedTask.kt:106)
  at kotlinx.coroutines.internal.LimitedDispatcher.run (LimitedDispatcher.kt:42)
  at kotlinx.coroutines.scheduling.TaskImpl.run (Tasks.kt:95)
  at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely (CoroutineScheduler.kt:570)
  at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask (CoroutineScheduler.kt:750)
  at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker (CoroutineScheduler.kt:677)
  at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run (CoroutineScheduler.kt:664)